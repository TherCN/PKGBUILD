# Maintainer: TherCN <b1431736437@163.com>

pkgname=gcc
pkgver=12.0.1
pkgrel=1
pkgdesc="GNU C/C++ Compiler"
arch=('aarch64')
url="https://gcc.gnu.org"
license=('GPL')
groups=('base-devel')
depends=('binutils')
makedepends=('libgmp' 'libmpfr' 'binutils' 'libmpc' 'clang' 'gettext' 'flex')
changelog="ChangeLog-2021"
#source=("https://mirrors.ustc.edu.cn/gnu/gcc/gcc-$pkgver/gcc-$pkgver.tar.xz")
source=("file:///data/data/com.termux/files/home/gcc-$pkgver.tar.xz"
	"build-depend.zip"
	"fix.patch")
md5sums=('6198a8bda70a19cfa806fd5ad68a874f'
	 '50dc08e7d1b0b48b01242832e3bcf9f4'
	 'SKIP')
termux_prefix=/data/data/com.termux/files/usr
mt_prefix=/data/data/bin.mt.plus/files/term/usr

prepare() {
	mkdir -pv $srcdir/gcc_build
	cd gcc-$pkgver/
	patch -p1 < ../../fix.patch
	echo "请问你要为哪个终端安装gcc？"
	echo -e "1.Termux\n2.MT管理器终端\n\n\n目前仅支持在Termux构建\n"
#在Termux为MT管理器构建教程:
#1.安装proot，指令:apt install proot
#2.修改termux-chroot，指令:nano $PREFIX/bin/termux-chroot，找到"-b /data:/data"，修改为"-b $PREFIX;$PREFIX"，然后Ctrl+X退出，按y保存
#3.输入termux-chroot，回车，进入一个虚拟环境，然后输入:mkdir -p /data/data/bin.mt.plus/files/term/usr来创建MT管理器的$PREFIX目录
#4.修改fix.patch，把最底下的"-rpath /data/data/com.termux/files/usr"修改成"-rpath /data/data/bin.mt.plus/files/term/usr"，然后Ctrl+X退出，按y保存
#5.然后输入termux-chroot进入虚拟环境，进入构建目录（PKGBUILD所在的目录），输入makepkg -d 即可
        read -p "请输入[1/2]:" install
        case $install in
        1)
        install_prefix=$termux_prefix
        ;;
        2)
        install_prefix=$mt_prefix
	;;
	*)
	echo "未输入或错误的输入，退出"
	exit 1
	;;
	esac
	cd ../gcc_build
../gcc-$pkgver/configure \
	--prefix=${install_prefix} \
	--enable-languages=c,c++ \
	--disable-multilib \
	--host=aarch64-linux-android \
	--build=aarch64-linux-android \
	--enable-default-pie \
	--enable-shared \
	--disable-bootstrap \
	--disable-libsanitizer \
	--with-arch=armv8-a \
	--with-system-zlib
	cd $install_prefix
	rm -rf aarch64-linux-android
	ln -s $srcdir/aarch64-linux-android
}

build() {
	cd $srcdir/gcc_build
	echo 即将开始构建，请保持termux在前台运行！
	a=4
	for i in {1..3}
	do
	a=$((a-1))
	echo $a
	sleep 1
	done
	echo 开始构建
	make -j$(nproc)
}

package() {
	cd $srcdir/gcc_build
	make DESTDIR="$pkgdir/" install
	cp -r $srcdir/aarch64-linux-android/include $pkgdir/data/data/bin.mt.plus/files/term/usr/
}
