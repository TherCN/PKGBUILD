# Maintainer: TherCN <b1431736437@163.com>

pkgname=gcc
pkgver=12.2.0
pkgrel=1
pkgdesc="GNU C/C++ Compiler"
arch=('aarch64')
url="https://gcc.gnu.org"
license=('GPL' 'GPLv2')
groups=('base-devel')
depends=('binutils' 'libmpfr' 'libmpc' 'libgmp' 'zlib' 'zstd')
makedepends=('libgmp' 'libmpfr' 'binutils' 'libmpc' 'clang' 'gettext' 'flex')
changelog="ChangeLog-2021"
source=("https://mirrors.ustc.edu.cn/gnu/gcc/gcc-$pkgver/gcc-$pkgver.tar.xz"
	"https://ghproxy.com/https://raw.githubusercontent.com/TherCN/PKGBUILD/main/main/gcc/build-depend.zip"
	"fix-mt.patch"
	"fix-termux.patch")
sha512sums=(SKIP
	 '8d8f4872d693f09e7410058b4cb533556695de39590ae5e3fa2c707c78af300e11d4a7da3cc76731ab21d9c0650b9d7a8e8323a3fdd26150cb7f8742866695ea'
	 '2047749be0eb37ea5654c8347f51d346a3e9836f156d792ef30426e36350e6b361fdbab7e750e1fff5ced023646eb7a40dd55c6a570ff4bc36491147d0a8fbb6'
	 'b3e2a43338b7ee442c5c95f577ca2990e01bc175e2d4fd53ae8a68bdcdb22f7e72fcc86baec823a3533ed518b5ca846b97de66fba45c92f3443f3e09158a23e4')
termux_prefix=/data/data/com.termux/files/usr
mt_prefix=/data/data/bin.mt.plus/files/term/usr




prepare() {
	mkdir -pv ${srcdir}/gcc
	cd gcc-$pkgver/
	echo "请问你要为哪个终端安装gcc？"
        echo -e "1.Termux\n2.MT管理器终端\n\n\n目前仅支持在Termux构建\n"
#在Termux为MT管理器构建教程:
#1.安装proot，指令:apt install proot
#2.修改termux-chroot，指令:nano $PREFIX/bin/termux-chroot，找到"-b /data:/data"，修改为"-b $PREFIX/..;$PREFIX/.."，然后Ctrl+X退出，按y保存
#3.输入termux-chroot，回车，进入一个虚拟环境，然后输入:mkdir -p /data/data/bin.mt.plus/files/term/usr来创>建MT管理器的$PREFIX目录
#4.然后输入termux-chroot进入虚拟环境，进入构建目录（PKGBUILD所在的目录），输入makepkg -d 即可
        read -p "请输入[1/2]:" install
        case ${install} in
        1)
	echo "export install_prefix=${termux_prefix}">${srcdir}/prefix
        patch -p1 < ../../fix-termux.patch
        ;;
        2)
	echo "export install_prefix=${mt_prefix}">${srcdir}/prefix
        patch -p1 < ../../fix-mt.patch
        ;;
        *)
        echo "未输入或错误的输入，退出"
        exit 1
        ;;
        esac
	source ${srcdir}/prefix
../gcc-$pkgver/configure \
	--prefix=${install_prefix} \
	--enable-languages=c,c++ \
	--disable-multilib \
	--host=aarch64-linux-android \
	--build=aarch64-linux-android \
	--enable-default-pie \
	--enable-shared \
	--disable-bootstrap \
	--disable-libsanitizer \
	--with-arch=armv8-a \	 
	--with-system-zlib

	cd $install_prefix
	rm -rf aarch64-linux-android
	ln -s ${srcdir}/aarch64-linux-android
}

build() {
	cd ${srcdir}/gcc
	echo 即将开始构建，请保持termux在前台运行！
	a=4
	for i in {1..3}
	do
	a=$((a-1))
	echo $a
	sleep 1
	done
	echo 开始构建
	make -j$(nproc)
}

package() {
	source ${srcdir}/prefix
	cd ${srcdir}/gcc
	make DESTDIR="$pkgdir/" install
	cp -r ${srcdir}/aarch64-linux-android/* $pkgdir/${install_prefix}
	cd $pkgdir/${install_prefix}/bin
	ln -s gcc cc
	rm -rf ${install_prefix}/aarch64-linux-android
}
